{"version":3,"sources":["Home.js","TextSearch.js","SpeechSearch.js","CourseCloud.js","SignIn.js","Register.js","Filter.js","Card.js","Result.js","CourseList.js","Main.js","reportWebVitals.js","index.js"],"names":["Home","className","to","courses","require","TextSearch","React","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","useEffect","results","i","length","name","toLowerCase","includes","push","title","credits","ge","join","introduction","requisites","searches","class","type","placeholder","value","onChange","e","target","slice","map","course","index","grading","makeCard","SpeechSearch","CourseCloud","trim","callbacks","options","rotations","fontWeight","fontSizes","colors","spiral","enableTooltip","size","para","names","r","v","text","words","displayCloud","SignIn","props","user","setUser","password","setPassword","style","maxWidth","marginBottom","for","id","event","onClick","console","log","users","JSON","parse","localStorage","getItem","loggedin","forEach","element","username","setItem","window","open","alert","display","width","marginTop","setUsername","pwverify","setPwverify","aria-describedby","val","newuser","alreadyadded","stringify","document","getElementById","GElist","Filter","geneds","setGeneds","sort","search","num_min","num_max","cr_min","cr_max","dept_y","dept_n","filter","setFilter","parseFloat","prevState","Chip","d","strtolist","str","split","res","toUpperCase","f","apply","defaultValue","defaultChecked","item","list","Card","c","cl","added","setAdded","color","float","cl2","clear","disabled","find","elt","Result","setRes","padding","sortbyge","gened","thiscourse","course_dept","course_num","cr","num_ge","req","a","b","backgroundColor","data","CourseList","Main","data-toggle","data-target","exact","path","component","Register","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8KAoBeA,MAjBf,WACE,OACE,sBAAKC,UAAU,YAAf,UACE,uBACA,iCAAQ,qDAAmC,uBAC3C,uBACA,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,cAAjC,4BAJF,qEAKE,uBACA,cAAC,IAAD,CAASD,UAAU,WAAWC,GAAG,eAAjC,0BANF,mFAOE,uBACA,cAAC,IAAD,CAASD,UAAU,WAAWC,GAAG,UAAjC,8BARF,mFASE,2B,4ECTAC,EAAUC,EAAQ,IAkJTC,EA9II,WAAO,IAAD,EAEaC,IAAMC,SAAS,IAF5B,mBAEhBC,EAFgB,KAEJC,EAFI,OAGmBH,IAAMC,SAAS,IAHlC,mBAGhBG,EAHgB,KAGDC,EAHC,OAKeL,IAAMC,SAAS,IAL9B,6BA2CvBK,qBAAU,WAER,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGE,KAAKC,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KAChGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGM,MAAMH,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACjGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGO,QAAQJ,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACnGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGQ,GAAGC,KAAK,MAAMN,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACzGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGU,aAAaP,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACxGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGW,WAAWR,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACtGD,EAAQM,KAAKhB,EAAQW,IAIzBH,EAAiBE,KAChB,CAACL,IAEJ,IAqBwBkB,EAaxB,OACE,gCACE,qBAAKC,MAAM,oDAAX,SACE,uBAAOC,KAAK,OAAOD,MAAM,WACvBE,YAAY,eACZC,MAAOtB,EACPuB,SAhFa,SAAAC,GACnBvB,EAAcuB,EAAEC,OAAOH,YAkFrB,qBAAKH,MAAM,sBAAX,SAKE,sBAAKA,MAAM,qBAAX,UAlGS,WACb,OACE,qBAAKA,MAAM,iBAAX,SACE,qBAAKA,MAAM,cAAX,SACE,mEAmEgBD,EA8BAhB,EA7BjBgB,EAASX,QAGRW,EAASX,OAAS,MACpBW,EAAWA,EAASQ,MAAM,EAAG,MAExBR,EAASS,KAAI,SAACC,EAAQC,GAAT,OA5BP,SAACD,EAAQC,GACxB,OACE,sBAAiBV,MAAM,4FAAvB,UACE,+BAAM,+BAAKS,EAAOpB,KAAZ,IAAmBoB,EAAOhB,WAChC,iCAAM,sBAAMO,MAAM,mBAAZ,mCAA4DS,EAAOZ,gBACzE,uBACA,iCAAO,sBAAMG,MAAM,mBAAZ,uBAA+C,+BAAOS,EAAOf,UAAe,0BAC5D,MAAtBe,EAAOX,YACN,iCAAO,sBAAME,MAAM,mBAAZ,0BAAkD,+BAAOS,EAAOX,aAAkB,0BAEzE,MAAjBW,EAAOd,GAAG,IACT,iCAAM,sBAAMK,MAAM,mBAAZ,kBAA0C,+BAAOS,EAAOd,KAAU,0BAEtD,MAAnBc,EAAOE,SACN,iCAAM,sBAAMX,MAAM,mBAAZ,8BAAsD,+BAAOS,EAAOE,aAE5E,yBAdQD,GA2BRE,CAASH,EAAQC,OANZ,mBAkCP,4BCnDSG,I,QC3FTrC,EAAUC,EAAQ,IAwITqC,EAtIK,WAAO,IAAD,EAEYnC,IAAMC,SAAS,IAF3B,mBAEjBC,EAFiB,KAELC,EAFK,OAGkBH,IAAMC,SAAS,IAHjC,mBAGjBG,EAHiB,KAGFC,EAHE,OAKcL,IAAMC,SAAS,IAL7B,6BA8BxBK,qBAAU,WACR,GAAsB,IAAnBJ,EAAWkC,OAAd,CAEA,IADA,IAAI7B,EAAU,GACLC,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGE,KAAKC,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KAChGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGM,MAAMH,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACjGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGO,QAAQJ,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACnGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGQ,GAAGC,KAAK,MAAMN,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACzGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGU,aAAaP,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACxGD,EAAQM,KAAKhB,EAAQW,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAC9BX,EAAQW,GAAGW,WAAWR,cAAcC,SAASV,EAAWS,iBAAmBJ,EAAQK,SAASf,EAAQW,KACtGD,EAAQM,KAAKhB,EAAQW,IAIzBH,EAAiBE,QAjCSF,EAAiB,MAkC1C,CAACH,IAEJ,IAqCMmC,EAAY,GAKZC,EAAU,CACdC,UAAW,EACXC,WAAY,OACZC,UAAW,CAAC,GAAI,KAChBC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAAY,YACtDC,OAAQ,cACRC,eAAe,GAEXC,EAAO,CAAC,KAAM,KAEpB,OACE,sCACI,qBAAKxB,MAAM,oDAAX,SACA,uBAAOC,KAAK,OAAOD,MAAM,WACvBE,YAAY,eACZC,MAAOtB,EACPuB,SApGa,SAAAC,GAEnBvB,EAAcuB,EAAEC,OAAOH,YAqGrB,qBAAKH,MAAM,mCAAX,SA7DiB,SAACyB,GACpB,IAAIvC,EAAU,GAMVE,GAJFF,EADEH,EAAcK,OAAS,IAClB,YAAOL,EAAcwB,MAAM,EAAG,MAE9B,YAAOxB,IAEKK,OAEjBsC,EAAQxC,EAAQsB,KAAI,SAACmB,EAAGxC,GAC1B,IAAIyC,EAAI,EAaR,OAXEA,EADEzC,EAAIC,GAAU,EACZ,IACKD,EAAIC,GAAU,GACnB,IACKD,EAAIC,GAAU,GACnB,IACKD,EAAIC,GAAU,GACnB,IAEA,GAGC,CAAEyC,KAAMF,EAAEtC,KAAMc,MAAOyB,MAEhC,OACE,8BACE,cAAC,IAAD,CACEZ,UAAWA,EACXC,QAASA,EACTO,KAAMA,EACNM,MAAOJ,MA+BRK,SCpEMC,EA7DA,SAACC,GAAW,IAAD,EACErD,mBAAS,IADX,mBACfsD,EADe,KACTC,EADS,OAEUvD,mBAAS,IAFnB,mBAEfwD,EAFe,KAELC,EAFK,KAqCtB,OACI,sBAAK/D,UAAU,YAAYgE,MAAO,CAAEC,SAAU,KAA9C,UACI,uBACA,oBAAID,MAAO,CAAEE,aAAc,IAA3B,qBACA,iCACI,sBAAKlE,UAAU,aAAf,UACI,uBAAOmE,IAAI,OAAX,sBACA,uBAAOnE,UAAU,eAAeoE,GAAG,OAAOtC,SAAU,SAAAuC,GAAK,OAAIR,EAAQQ,EAAMrC,OAAOH,aAEtF,sBAAK7B,UAAU,aAAf,UACI,uBAAOmE,IAAI,WAAX,sBAEA,uBAAOxC,KAAK,WAAW3B,UAAU,eAAeoE,GAAG,WAAWtC,SAAU,SAAAuC,GAAK,OAAIN,EAAYM,EAAMrC,OAAOH,aAE9G,wBAAQ7B,UAAU,eAAesE,QA/C9B,WAQXC,QAAQC,IAAI,SAASZ,EAAK,eAAeE,GAEzC,IAAIW,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC/B,MAATJ,IAAiBA,EAAQ,IAE7B,IAAIK,GAAW,EAMf,OALAL,EAAMM,SAAQ,SAAAC,GACNA,EAAQC,UAAYrB,GAAQoB,EAAQlB,UAAYA,IAChDgB,GAAW,MAGfA,GAIAF,aAAaM,QAAQ,cAAetB,GACpCgB,aAAaM,QAAQ,OAAO,GAC5BX,QAAQC,IAAI,gBAAgBI,aAAaC,QAAQ,gBACjDN,QAAQC,IAAI,gBAAgBI,aAAaC,QAAQ,aACjDM,OAAOC,KAAK,+BAPZC,MAAM,4BA4BErB,MAAO,CAAEsB,QAAS,QAASC,MAAO,OAAQrB,aAAc,GAAIsB,UAAW,IAD3E,qBAEA,8CAAgB,cAAC,IAAD,CAASvF,GAAG,YAAZ,+CCkCjByD,EAxFA,SAACC,GAAW,IAAD,EACUrD,mBAAS,IADnB,mBACf2E,EADe,KACLQ,EADK,OAEInF,mBAAS,IAFb,gCAGUA,mBAAS,KAHnB,mBAGfwD,EAHe,KAGLC,EAHK,OAKUzD,oBAAS,GALnB,gCAMUA,oBAAS,IANnB,mBAMfoF,EANe,KAMLC,EANK,KAoDtB,OACI,sBAAK3F,UAAU,YAAYgE,MAAO,CAAEC,SAAU,KAA9C,UACI,uBACA,oBAAID,MAAO,CAAEE,aAAc,IAA3B,iCACA,iCACI,sBAAKlE,UAAU,aAAf,UACI,wBAAOmE,IAAI,WAAX,qBAA8B,sBAAMnE,UAAU,cAAhB,kBAC9B,uBAAOA,UAAU,eAAeoE,GAAG,WAAWtC,SAzB7C,SAACC,GACd0D,EAAY1D,EAAEC,OAAOH,aAmCb,sBAAK7B,UAAU,aAAf,UACI,wBAAOmE,IAAI,WAAX,qBAA8B,sBAAMnE,UAAU,cAAhB,kBAC9B,uBAAO2B,KAAK,WAAW3B,UAAU,eAAeoE,GAAG,WAAWwB,mBAAiB,SAAS9D,SA5BvF,SAACC,GACd,IAAI8D,EAAM9D,EAAEC,OAAOH,MACH,IAAbgE,EAAI/E,QAAc+E,EAAI/E,OAAO,EAC5B6E,GAAY,GACRA,GAAY,GACpB5B,EAAY8B,MAwBCH,EACG,uBAAOtB,GAAG,SAASpE,UAAU,uBAA7B,wDACA,uBAAOoE,GAAG,SAASpE,UAAU,wBAA7B,wCAGR,wBAAQA,UAAU,eAAesE,QAtE5B,WACb,IAAIwB,EAAU,CACVb,SAAUA,EACVnB,SAAUA,GAGVW,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC/B,MAATJ,IAAiBA,EAAQ,IAE7B,IAAIsB,GAAe,EACnBtB,EAAMM,SAAQ,SAAAC,GACNA,EAAQC,UAAYa,EAAQb,WAC5Bc,GAAe,MAGpBA,EAAeV,MAAM,oBACxBZ,EAAMvD,KAAK4E,GACXlB,aAAaM,QAAQ,QAASR,KAAKsB,UAAUvB,IAC7CF,QAAQC,IAAIE,KAAKC,MAAMC,aAAaC,QAAQ,WAE5CoB,SAASC,eAAe,YAAYrE,MAAM,GAC1CoE,SAASC,eAAe,YAAYrE,MAAM,GAC1C4D,EAAY,IACZ1B,EAAY,MAgDAC,MAAO,CAAEsB,QAAS,QAASC,MAAO,OAAQrB,aAAc,GAAIsB,UAAW,IAD3E,4BAEA,6DAA+B,cAAC,IAAD,CAASvF,GAAG,UAAZ,qC,OCjFzCkG,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MA2L7GC,EAzLA,SAACzC,GAAU,MAEMtD,IAAMC,SAAS,IAFrB,mBAEf+F,EAFe,KAEPC,EAFO,OAGMjG,IAAMC,SAAS,CACvCiG,KAAM,EACNC,OAAQ,EACRC,QAAS,EACTC,QAAS,IACTC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,GACRC,OAAQ,GACRzF,GAAI,KAZc,mBAGf0F,EAHe,KAGPC,EAHO,KAmChBR,EAAS,SAACzE,GACZ,IAAI8D,EAAM9D,EAAEC,OAAOH,MAAOgE,EAAMoB,WAAWpB,GAC3CmB,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBV,OAAQX,QAyC9CsB,EAAO,SAACpG,GACV,OACI,yBAAQf,UAAU,2BAAsC6B,MAAOd,EAAMuD,QAAS,kBANxEvC,EAMkFhB,OAL5FuF,GAAU,SAACD,GAAD,OAAYA,EAAOU,QAAO,SAACK,GAAD,OAAOA,IAAMrF,QADxC,IAACA,GAMN,UACKhB,EADL,OACgB,mBAAGW,MAAM,mBADyBX,IAMpDsG,EAAY,SAACC,GACf,GAAkB,IAAdA,EAAI7E,OAAgB,MAAO,GAC/B6E,EAAMA,EAAIC,MAAM,KAChB,IAAIC,EAAM,GAIV,OAHAF,EAAIvC,SAAQ,SAAAC,GACRwC,EAAItG,KAAK8D,EAAQvC,OAAOgF,kBAErBD,GAGX,OAEI,gCACI,wBAAQxH,UAAU,eAAegE,MAAO,CAAEsB,QAAS,QAASC,MAAO,QAAUjB,QAnFjE,WAChB,IAAIoD,EAAI,CACJnB,KAAMQ,EAAOR,KACbC,OAAQO,EAAOP,OACfC,QAASM,EAAON,QAChBC,QAASK,EAAOL,QAChBC,OAAQI,EAAOJ,OACfC,OAAQG,EAAOH,OACfC,OAAQQ,EAAUN,EAAOF,QACzBC,OAAQO,EAAUN,EAAOD,QACzBzF,GAAIgF,GAER9B,QAAQC,IAAIkD,GACZ/D,EAAMgE,MAAMD,IAsER,2BAAyH,uBACzH,yBAAQE,aAAa,IAAI5H,UAAU,iCAAiC8B,SApE/D,SAACC,GACViF,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBX,KAAMU,WAAWlF,EAAEC,OAAOH,aAmE9D,UACI,wBAAQA,MAAM,IAAd,6CACA,wBAAQA,MAAM,IAAd,qCAIJ,uBACA,gCACI,2CACA,sBAAK7B,UAAU,8BAAf,UACI,uBAAO2B,KAAK,QAAQyC,GAAG,KAAKrD,KAAK,cAAcf,UAAU,uBAAuB6B,MAAM,IAAIgG,gBAAc,EAAC/F,SAAU0E,IACnH,uBAAOxG,UAAU,uBAAuBmE,IAAI,KAA5C,iCAEJ,sBAAKnE,UAAU,8BAAf,UACI,uBAAO2B,KAAK,QAAQyC,GAAG,KAAKrD,KAAK,cAAcf,UAAU,uBAAuB6B,MAAM,IAAIC,SAAU0E,IACpG,uBAAOxG,UAAU,uBAAuBmE,IAAI,KAA5C,wCAGR,uBACA,gCACI,4CADJ,gBAGQ,uBAAOxC,KAAK,OAAO3B,UAAU,+BAA+BoE,GAAG,eAAetC,SAnF1E,SAACC,GACjBiF,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBL,OAAQ9E,EAAEC,OAAOH,YAmF7CD,YAAY,8BAChB,0HAAoG,uBALxG,kBAOQ,uBAAOD,KAAK,OAAO3B,UAAU,+BAA+BoE,GAAG,eAAetC,SApF1E,SAACC,GACjBiF,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBJ,OAAQ/E,EAAEC,OAAOH,YAoF7CD,YAAY,wBAEhB,oEAEJ,uBASA,gCACI,wCACCyE,EAAOnE,KAAI,SAAC4F,GAAD,OAAU,iCAAOX,EAAKW,GAAZ,aACtB,sBAAKpG,MAAM,mBAAX,UACI,uBAAOC,KAAK,OAAOD,MAAM,eAAeE,YAAY,KAAKmG,KAAK,MAAM3D,GAAG,OACvE,0BAAUA,GAAG,MAAb,SACK+B,EAAOjE,KAAI,SAAC4F,GAAD,OAAU,wBAAmBjG,MAAOiG,GAAbA,QAEvC,qBAAKpG,MAAM,qBAAX,SACI,wBAAQA,MAAM,4BAA4BC,KAAK,SAAS2C,QApF9D,WACV,IAAIuB,EAAMI,SAASC,eAAe,MAAMrE,MACpCsE,EAAOlF,SAAS4E,KAAMQ,EAAOpF,SAAS4E,KAG1CS,EAAU,GAAD,mBAAKD,GAAL,CAAaR,KACtBI,SAASC,eAAe,MAAMrE,MAAM,KA8EpB,sBAGR,2EAEJ,uBACA,gCACI,qDACA,uBAAM7B,UAAU,cAAhB,UACI,uBAAO2B,KAAK,OAAOqC,MAAO,CAAEuB,MAAO,QAAUvF,UAAU,+BAA+BoE,GAAG,OACrFxC,YAAY,MAAME,SAlHhB,SAACC,GACnB,IAAI8D,EAAM9D,EAAEC,OAAOH,MAAOgE,EAAMoB,WAAWpB,GAC3CmB,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBT,QAASZ,UA8GzC,wBAIQ,uBAAOlE,KAAK,OAAOqC,MAAO,CAAEuB,MAAO,QAAUvF,UAAU,+BAA+BoE,GAAG,OACzFxC,YAAY,MAAME,SAjHhB,SAACC,GACnB,IAAI8D,EAAM9D,EAAEC,OAAOH,MAAOgE,EAAMoB,WAAWpB,GAC3CmB,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBR,QAASb,gBAmH7C,uBACA,gCACI,oDACA,uBAAM7F,UAAU,cAAhB,UACI,uBAAO2B,KAAK,OAAOqC,MAAO,CAAEuB,MAAO,QAAUvF,UAAU,+BAA+BoE,GAAG,QACrFxC,YAAY,MAAME,SAtHnB,SAACC,GAChB,IAAI8D,EAAM9D,EAAEC,OAAOH,MAAOgE,EAAMoB,WAAWpB,GAC3CmB,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBP,OAAQd,UAkHxC,wBAIQ,uBAAOlE,KAAK,OAAOqC,MAAO,CAAEuB,MAAO,QAAUvF,UAAU,+BAA+BoE,GAAG,QACzFxC,YAAY,MAAME,SArHnB,SAACC,GAChB,IAAI8D,EAAM9D,EAAEC,OAAOH,MAAOgE,EAAMoB,WAAWpB,GAC3CmB,GAAU,SAAAE,GAAS,kCAAUA,GAAV,IAAqBN,OAAQf,gBAuH5C,2BCpLRf,EAAWF,aAAaC,QAAQ,OAsErBmD,GArEJpD,aAAaC,QAAQ,eAEnB,SAAClB,GAEV,IAAIsE,EAAItE,EAAMxB,OAEV+F,EAAKxD,KAAKC,MAAMC,aAAaC,QAAQ,eAC/B,MAANqD,IAAcA,EAAK,IACvB,IAAInC,GAAe,EACnBmC,EAAKA,EAAGnD,SAAQ,SAAAC,GACRA,EAAQjE,MAAQkH,EAAElH,OAClBgF,GAAe,MATH,MAaMzF,mBAASyF,GAbf,mBAaboC,EAba,KAaNC,EAbM,KA6CpB,OACI,qBAAKpI,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIgE,MAAO,CAAEsB,QAAS,UAAtB,UACI,4BAAI2C,EAAElH,OADV,IACqBkH,EAAE9G,MACnB,uBAAM6C,MAAO,CAAEqE,MAAO,QAAtB,eAAmCJ,EAAE7G,QAArC,UAEF+G,EAIE,yBAAQxG,KAAK,SAAS3B,UAAU,wBAAwBgE,MAAO,CAAEsE,MAAO,SAAWhE,QA7B5E,WACnB,IAAI4D,EAAKxD,KAAKC,MAAMC,aAAaC,QAAQ,eAIzC,GAHAN,QAAQC,IAAI0D,GACZE,GAAS,GACTH,EAAEE,OAAQ,EACA,MAAND,EAAJ,CAGA,IAAIK,EAAM,GACVL,EAAKA,EAAGnD,SAAQ,SAAAC,GACRA,EAAQjE,MAAQkH,EAAElH,MAClBwH,EAAIrH,KAAK8D,MAGjBJ,aAAa4D,QACb5D,aAAaM,QAAQ,aAAcR,KAAKsB,UAAUuC,MAcsEE,UAAW3D,EAAvH,UACI,mBAAG9E,UAAU,wBAA0B,wDAJ3C,yBAAQ2B,KAAK,SAAS3B,UAAU,yBAAyBgE,MAAO,CAAEsE,MAAO,SAAWhE,QAtClF,WACd,IAAI4D,EAAKxD,KAAKC,MAAMC,aAAaC,QAAQ,eACzCN,QAAQC,IAAI0D,GACF,MAANA,IAAcA,EAAK,IACXA,EAAGQ,MAAK,SAAAC,GAAG,OAAIA,EAAI5H,MAAQkH,EAAElH,QAEzCmH,EAAGhH,KAAK+G,GACRrD,aAAaM,QAAQ,aAAcR,KAAKsB,UAAUkC,IAClDE,GAAS,GACTH,EAAEE,OAAQ,GA6B0GM,UAAW3D,EAAnH,UACI,mBAAG9E,UAAU,uBAAyB,mDAK9C,uBAAM,wCAZV,IAYqC,KAAXiI,EAAE5G,GAAG,GAAY,OAAS4G,EAAE5G,GAAG,uBACrD,yCAbJ,IAaqC,KAAhB4G,EAAEzG,WAAoB,OAASyG,EAAEzG,WAAW,uBAC7D,+BAAOyG,EAAE1G,sBC9DnBrB,EAAUC,EAAQ,IAiFTyI,EA/EA,SAACjF,GAAW,IAAD,EACArD,mBAASJ,EAAQ+B,MAAM,EAAE,MADzB,mBACfuF,EADe,KACVqB,EADU,KA6DtB,OACI,sBAAK7I,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAQgE,MAAO,CAAE8E,QAAS,aAAzC,SACI,cAAC,EAAD,CAAQnB,MA7DF,SAACZ,GACf,IAAInG,EAAU,GAEVmI,EAA2B,GAAfhC,EAAOR,KACnBM,EAASE,EAAOF,OAChBC,EAASC,EAAOD,OAChBH,EAASI,EAAOJ,OAChBC,EAASG,EAAOH,OAChBH,EAAUM,EAAON,QACjBC,EAAUK,EAAOL,QACjBsC,EAAQjC,EAAO1F,GACT,IAAP2H,GAAyB,GAAdA,EAAMlI,SAChBkI,EAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAGvH,IAAK,IAAInI,EAAI,EAAGA,EAAIX,EAAQY,OAAQD,IAAK,CACrC,IAAIoI,EAAa/I,EAAQW,GAErBqI,EAAcD,EAAWlI,KAAKwG,MAAM,KAAK,GACzC4B,EAAaF,EAAWlI,KAAKwG,MAAM,KAAK,GACxC6B,EAAKnC,WAAWgC,EAAW7H,QAAQmG,MAAM,KAAK,IAC/CV,EAAO/F,OAAO,IACT+F,EAAO5F,SAASiI,KAErBpC,EAAO7F,SAASiI,IAEhBC,EAAW1C,GAAW0C,EAAWzC,GACjC0C,EAAGzC,GAAUyC,EAAGxC,GAEnBhG,EAAQM,KAAK+H,IAGdF,IACCnI,EAAQmE,SAAQ,SAAC4D,GACbA,EAAIU,OAAS,EACC,KAAXV,EAAItH,GAAG,IAGNsH,EAAItH,GAAG0D,SAAQ,SAACuE,GACTN,EAAM/H,SAASqI,EAAI7G,OAAOR,MAAM,EAAE,KAAK0G,EAAIU,eAK1DzI,EAAQ2F,MAAK,SAASgD,EAAEC,GACpB,OAAOA,EAAEH,OAASE,EAAEF,WAKxBzI,EAAQE,OAAS,GACJ,YAAOF,EAAQqB,MAAM,EAAG,KAExB,UAAOrB,GAExBiI,EAAOjI,EAAQqB,MAAM,EAAG,WAQpB,qBAAKjC,UAAU,QAAQgE,MAAO,CAAEyF,gBAAiB,sBAAjD,SACKjC,EAAItF,KAAI,SAACwH,GAAW,OAAQ,gCAAK,uBAAS,cAAC,EAAD,CAAMvH,OAAQuH,YAE7D,qBAAK1J,UAAU,cCzDZ2J,EAdI,SAAChG,GACLiB,aAAaC,QAAQ,eAAhC,IACIqD,EAAKxD,KAAKC,MAAMC,aAAaC,QAAQ,eACzC,OACI,qBAAK7E,UAAU,YAAf,SACI,qBAAMgE,MAAO,CAAEyF,gBAAiB,sBAAhC,SACU,MAAJvB,GAAuB,GAAXA,EAAGpH,OACjB,+BAAI,uBAAJ,oCACAoH,EAAGhG,KAAI,SAACwH,GAAW,OAAQ,gCAAK,uBAAS,cAAC,EAAD,CAAMvH,OAAQuH,eCHnE5E,EAAWF,aAAaC,QAAQ,OA+ErB+E,M,uKA3EP,OACI,cAAC,IAAD,UACI,gCAaI,sBAAK5J,UAAU,8CAAf,UACI,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,eAA1B,kBACA,wBAAQA,UAAU,iBAAiB2B,KAAK,SAASkI,cAAY,WAAWC,cAAY,aAApF,SACI,sBAAM9J,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BoE,GAAG,YAA7C,UACI,qBAAIpE,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,cAAjC,8BAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,eAAjC,4BAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAjC,mCAGR,qBAAID,UAAU,aAAd,UAEM8E,EAAY,oBAAI9E,UAAU,WAAd,SACV,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,cAAjC,8BADO,GAGT6E,EAEI,GAFK,oBAAI9E,UAAU,WAAd,SACP,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAjC,uBAEF6E,EAEI,GAFK,oBAAI9E,UAAU,WAAd,SACP,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,YAAjC,iCAQhB,sBAAKD,UAAU,UAAf,UACI,cAAC,IAAD,CAAO+J,OAAK,EAACC,KAAK,IAAIC,UAAWlK,IACjC,cAAC,IAAD,CAAOiK,KAAK,cAAcC,UAAW7J,IAErC,cAAC,IAAD,CAAO4J,KAAK,eAAeC,UAAWzH,IACtC,cAAC,IAAD,CAAOwH,KAAK,UAAUC,UAAWvG,IACjC,cAAC,IAAD,CAAOsG,KAAK,YAAYC,UAAWC,IACnC,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWrB,IACjC,cAAC,IAAD,CAAOoB,KAAK,cAAcC,UAAWN,gB,GA5D1CQ,aCCJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEF9E,SAASC,eAAe,SAM1BkE,K","file":"static/js/main.4dbc3d0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container\">\r\n      <br></br>\r\n      <center><h1>UNC Course Search</h1></center><hr/>\r\n      <br></br>\r\n      <NavLink className=\"nav-link\" to=\"/textSearch\">Search by Text</NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Quick and simple search by keyword.\r\n      <br></br>\r\n      <NavLink className=\"nav-link\" to='/courseCloud'>Course Cloud</NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Visualize your search result with Word Cloud.\r\n      <br></br>\r\n      <NavLink className=\"nav-link\" to='/result'>Search by Filter</NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Search all UNC courses with advanced filters.\r\n      <br></br>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport axios from 'axios';\r\nimport ReactWordcloud from 'react-wordcloud';\r\nconst courses = require(\"./courses.json\");\r\n// import CourseCloud from './CourseCloud';\r\n\r\n// class TextSearch extends React.Component {\r\nconst TextSearch = () => {\r\n\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const [searchResults, setSearchResults] = React.useState([]);\r\n  // const [courses, setCourses] = React.useState(data);\r\n  const [courseNames, setCourseNames] = React.useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   getBlogPost();\r\n  // }, []);\r\n\r\n  // const getBlogPost = () => {\r\n  //   axios.get('/courses')\r\n  //     .then((res) => {\r\n  //       console.log('you are here')\r\n  //       const data = res.data;\r\n  //       setCourses(data)\r\n  //       let names = [];\r\n  //       // data.forEach(course => {\r\n  //       //   names.push(course.split('. ')[0]);\r\n  //       // });\r\n  //       setCourseNames(names);\r\n  //       // console.log('Data has been received');\r\n  //     })\r\n  //     .catch(() => {\r\n  //       alert('Error retrieving data!!!');\r\n  //     })\r\n  // }\r\n\r\n  const Header = () => {\r\n    return (\r\n      <div class='container mb-3'>\r\n        <div class='page-header'>\r\n          <h1>Your Course Recommendations</h1>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let results = [];\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].name.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].title.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].credits.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].ge.join(', ').toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].introduction.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].requisites.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    // || course.grading.toLowerCase().includes(searchTerm.toLowerCase())\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n\r\n  const makeCard = (course, index) => {\r\n    return (\r\n      <div key={index} class='container border border-left-0 border-right-0 border-bottom-0 border-dark mb-0 mt-10 pt-3' >\r\n        <span><h5>{course.name} {course.title}</h5></span>\r\n        <span><span class='font-weight-bold'>Course Introduction: </span>{course.introduction}</span>\r\n        <br />\r\n        <span ><span class='font-weight-bold'>Credits: </span><span>{course.credits}</span><br /></span>\r\n        {course.requisites !== 's' &&\r\n          <span ><span class='font-weight-bold'>Requisites: </span><span>{course.requisites}</span><br /></span>\r\n        }\r\n        {course.ge[0] !== 's' &&\r\n          <span><span class='font-weight-bold'>GE: </span><span>{course.ge}</span><br /></span>\r\n        }\r\n        {course.grading !== 's' &&\r\n          <span><span class='font-weight-bold'>Grading Status: </span><span>{course.grading}</span></span>\r\n        }\r\n        <hr />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const displayCourses = (searches) => {\r\n    if (!searches.length) {\r\n      return \"No results\";\r\n    } else {\r\n      if (searches.length > 100) {\r\n        searches = searches.slice(0, 100);\r\n      }\r\n      return searches.map((course, index) => (\r\n        makeCard(course, index)\r\n      ));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"container d-flex justify-content-center mt-3 mb-4\">\r\n        <input type=\"text\" class=\"col-lg-7\"\r\n          placeholder=\"Search class\"\r\n          value={searchTerm}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div class='row container-fluid'>\r\n\r\n        {/* <div class='container col-lg-1'>\r\n            <this.Filter />\r\n          </div> */}\r\n        <div class='container col-lg-7'>\r\n\r\n          {Header}\r\n          {displayCourses(searchResults)}\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextSearch;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst courses = [\r\n  {\r\n    name: 'COMP426',\r\n    intro: 'Modern Web Programming',\r\n    pre: 'COMP410',\r\n    ge: 'No GE',\r\n    url: '#'\r\n  },\r\n  {\r\n    name: 'COMP562',\r\n    intro: 'Intro to Machine Learning',\r\n    ge: 'No GE',\r\n    url: '#'\r\n  }\r\n]\r\n\r\nfunction SpeechSearch() {\r\n\r\n  return (\r\n    <div>\r\n      {/* <button>\r\n        <i className=\"fa fa-microphone\" />\r\n      </button>\r\n      <div class='row container-fluid'>\r\n        <div class='container col-lg-1'>\r\n          <Filter />\r\n        </div>\r\n        <div class='container col-lg-7'>\r\n          <Header />\r\n          <CourseList />\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Filter() {\r\n  return (\r\n    <div>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>Semester</option>\r\n      </select>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>Major</option>\r\n      </select>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>Subject</option>\r\n      </select>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>GE</option>\r\n      </select>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>Credit Hours</option>\r\n      </select>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>Honors or Non-Honors</option>\r\n      </select>\r\n      <select class=\"mdb-select md-form border border-buttom-0\" style={{ width: '350px', height: '60px' }}>\r\n        <option value=\"\" disabled selected>Professor Rate</option>\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div class='container mb-3'>\r\n      <div class='page-header'>\r\n        <h1>Your Course Recommendations</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CourseList() {\r\n  return courses.map(function (course) {\r\n    return (\r\n      <div class='container border border-left-0 border-right-0 border-bottom-0 border-dark mb-0 mt-10 pt-3' >\r\n        <span>\r\n          <a href={course.url}><h4>{course.name}</h4></a>\r\n        </span>\r\n        <span>Course Introduction: {course.intro}</span>\r\n        <br />\r\n        <span>Prerequisites: {course.pre}</span>\r\n        <br />\r\n        <span>GE: {course.ge}</span>\r\n        <hr />\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default SpeechSearch;","import React, { useState, useEffect } from \"react\";\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport axios from 'axios';\r\nconst courses = require(\"./courses.json\");\r\n\r\nconst CourseCloud = () => {\r\n\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const [searchResults, setSearchResults] = React.useState([]);\r\n  //const [courses, setCourses] = React.useState([]);\r\n  const [courseNames, setCourseNames] = React.useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   getBlogPost();\r\n  // }, []);\r\n\r\n  // const getBlogPost = () => {\r\n  //   axios.get('/courses')\r\n  //     .then((res) => {\r\n  //       const data = res.data;\r\n  //       setCourses(data)\r\n  //       let names = [];\r\n  //       setCourseNames(names);\r\n  //       // console.log('Data has been received');\r\n  //     })\r\n  //     .catch(() => {\r\n  //       alert('Error retrieving data!!!');\r\n  //     })\r\n  // }\r\n\r\n  const handleChange = e => {\r\n\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(searchTerm.trim()==\"\"){setSearchResults([]);return;};\r\n    let results = [];\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].name.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].title.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].credits.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].ge.join(', ').toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].introduction.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    for (let i = 0; i < courses.length; i++) {\r\n      if (courses[i].requisites.toLowerCase().includes(searchTerm.toLowerCase()) && !results.includes(courses[i])) {\r\n        results.push(courses[i]);\r\n      }\r\n    }\r\n    // || course.grading.toLowerCase().includes(searchTerm.toLowerCase())\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n\r\n  const displayCloud = (para) => {\r\n    let results = []\r\n    if (searchResults.length > 100) {\r\n      results = [...searchResults.slice(0, 100)];\r\n    } else {\r\n      results = [...searchResults];\r\n    }\r\n    let length = results.length;\r\n    //console.log(length);\r\n    let names = results.map((r, i) => {\r\n      let v = 0;\r\n      if (i / length == 0) {\r\n        v = 1000;\r\n      } else if (i / length <= 0.3) {\r\n        v = 200;\r\n      } else if (i / length <= 0.5) {\r\n        v = 150;\r\n      } else if (i / length <= 0.8) {\r\n        v = 100;\r\n      } else {\r\n        v = 50;\r\n      }\r\n      //console.log(\"i\", i / length);\r\n      return { text: r.name, value: v };\r\n    });\r\n    return (\r\n      <div>\r\n        <ReactWordcloud\r\n          callbacks={callbacks}\r\n          options={options}\r\n          size={size}\r\n          words={names}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const callbacks = {\r\n    // onWordClick: console.log,\r\n    // onWordMouseOver: console.log,\r\n    // getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\r\n  }\r\n  const options = {\r\n    rotations: 0,\r\n    fontWeight: \"bold\",\r\n    fontSizes: [15, 110],\r\n    colors: ['#581845', '#900C3F', '#C70039', '#FF5733 ', '#FFC300 '],\r\n    spiral: 'archimedean',\r\n    enableTooltip: false\r\n  };\r\n  const size = [1150, 600];\r\n\r\n  return (\r\n    <div\r\n    >   <div class=\"container d-flex justify-content-center mt-3 mb-4\">\r\n        <input type=\"text\" class=\"col-lg-7\"\r\n          placeholder=\"Search class\"\r\n          value={searchTerm}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div class=\"container justify-content-center\">\r\n        {displayCloud(searchResults)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default CourseCloud;","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst SignIn = (props) => {\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const signin = () => {\r\n        \r\n        //window.open('Comp426-final-project', \"_self\", true);\r\n        //window.location.replace('http://www.w3schools.com');\r\n        //console.log(\"hey\");\r\n        //window.location.href = \"http://www.w3schools.com\";\r\n        //return <Redirect to='/register' />;\r\n        //return <Redirect to='../register' />;\r\n        console.log(\"user: \"+user+\"; password: \"+password);\r\n\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        if (users == null) { users = []; }\r\n\r\n        let loggedin = false;\r\n        users.forEach(element => {\r\n            if (element.username == user && element.password == password) {\r\n                loggedin = true;\r\n            }\r\n        });\r\n        if(!loggedin){\r\n            alert(\"Wrong username/password\");\r\n            return;\r\n        } else {//success\r\n            localStorage.setItem('currentuser', user);\r\n            localStorage.setItem('log', true);\r\n            console.log(\"current user:\"+localStorage.getItem('currentuser'));\r\n            console.log(\"logged in?:\"+!!localStorage.getItem('log'));\r\n            window.open('Comp426-final-project');\r\n                \r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{ maxWidth: 400 }}>\r\n            <br></br>\r\n            <h3 style={{ marginBottom: 15 }}>Sign in</h3>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"name\">Username</label>\r\n                    <input className=\"form-control\" id=\"name\" onChange={event => setUser(event.target.value)}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    {/* <span style={{ float: \"right\" }}><NavLink to='/signin'>Forgot your password?</NavLink></span> */}\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" onChange={event => setPassword(event.target.value)}/>\r\n                </div>\r\n                <button className=\"btn btn-dark\" onClick={signin}\r\n                    style={{ display: 'block', width: '100%', marginBottom: 10, marginTop: 30 }}>Sign in</button>\r\n                <span>New user? <NavLink to='/register'>Create an account here.</NavLink></span>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default SignIn;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignIn = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    //verify input\r\n    const [emverify, setEmverify] = useState(true); //email\r\n    const [pwverify, setPwverify] = useState(true); //password\r\n\r\n    const register = () => {\r\n        let newuser = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        if (users == null) { users = []; }\r\n        //console.log(users);\r\n        let alreadyadded = false;\r\n        users.forEach(element => {\r\n            if (element.username == newuser.username) {\r\n                alreadyadded = true;\r\n            }\r\n        });\r\n        if(alreadyadded){ alert(\"Username taken.\"); return; }\r\n        users.push(newuser);\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        console.log(JSON.parse(localStorage.getItem('users')));\r\n        \r\n        document.getElementById(\"username\").value=\"\";\r\n        document.getElementById(\"password\").value=\"\";\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    const unChange = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n    const emChange = (e) => {\r\n        let val = e.target.value;\r\n        if(val.length===0 || val.match(/\\S+@\\S+\\.\\S+/)){\r\n            setEmverify(true);\r\n        } else {setEmverify(false);}\r\n        setEmail(val.trim());\r\n    }\r\n    const pwChange = (e) => {\r\n        let val = e.target.value;\r\n        if(val.length===0 || val.length>5){\r\n            setPwverify(true);\r\n        } else {setPwverify(false);}\r\n        setPassword(val);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{ maxWidth: 400 }}>\r\n            <br></br>\r\n            <h3 style={{ marginBottom: 15 }}>Create your account</h3>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"username\">Username<span className=\"text-danger\">*</span></label>\r\n                    <input className=\"form-control\" id=\"username\" onChange={unChange} />\r\n                </div>\r\n                {/* <div className=\"form-group\">\r\n                    <label for=\"email\">Email Address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" onChange={emChange} />                    \r\n                    {emverify ?\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Add your email in case you forget your\r\n                        password.</small> :\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">This does not look like a valid email address.</small>\r\n                    }\r\n                </div> */}\r\n                <div className=\"form-group\">\r\n                    <label for=\"password\">Password<span className=\"text-danger\">*</span></label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" aria-describedby=\"pwHelp\" onChange={pwChange} />\r\n                    {pwverify ?\r\n                        <small id=\"pwHelp\" className=\"form-text text-muted\">Set your password (at least 6 characters).</small> :\r\n                        <small id=\"pwHelp\" className=\"form-text text-danger\">Less than 6 characters.</small>\r\n                    }\r\n                </div>\r\n                <button className=\"btn btn-dark\" onClick={register}\r\n                    style={{ display: 'block', width: '100%', marginBottom: 10, marginTop: 30 }}>Create account</button>\r\n                <span>Already have an account? <NavLink to='/signin'>Sign in here.</NavLink></span>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default SignIn;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst GElist = [\"CR\", \"FL\", \"QR\", \"LF\", \"PX\", \"PL\", \"HS\", \"SS\", \"VP\", \"LA\", \"PH\", \"BN\", \"CI\", \"EE\", \"GL\", \"NA\", \"QI\", \"US\", \"WB\"];\r\n\r\nconst Filter = (props) => {\r\n    // const [user, setUser] = useState('');\r\n    const [geneds, setGeneds] = React.useState([]);\r\n    const [filter, setFilter] = React.useState({\r\n        sort: 0, // sort result by type 0-5\r\n        search: 0, // 0: name; 1: name and description\r\n        num_min: 0, // max course number allowed (inclusive)\r\n        num_max: 700, // max course number allowed (inclusive)\r\n        cr_min: 0, // min credit hour allowed (inclusive)\r\n        cr_max: 4, // max credit hour allowed (inclusive)\r\n        dept_y: \"\", // dept_y: [], // list of departments can appear in the result;\r\n        dept_n: \"\", // dept_n: [], // list of departments not allowed in the result;\r\n        ge: \"\",  // ge: [], // list of gen ed the user is interested in;    \r\n        // comma separated lists; incorrect names allowed but will be ignored\r\n    });\r\n\r\n    const applyfilter = () => {\r\n        let f = {\r\n            sort: filter.sort,\r\n            search: filter.search,\r\n            num_min: filter.num_min,\r\n            num_max: filter.num_max,\r\n            cr_min: filter.cr_min,\r\n            cr_max: filter.cr_max,\r\n            dept_y: strtolist(filter.dept_y),\r\n            dept_n: strtolist(filter.dept_n),\r\n            ge: geneds,\r\n        }\r\n        console.log(f);\r\n        props.apply(f);\r\n    }\r\n\r\n    const sort = (e) => {\r\n        setFilter(prevState => ({ ...prevState, sort: parseFloat(e.target.value) }));\r\n    }\r\n    const search = (e) => {\r\n        let val = e.target.value; val = parseFloat(val);\r\n        setFilter(prevState => ({ ...prevState, search: val }));\r\n    }\r\n    const deptinclude = (e) => {\r\n        setFilter(prevState => ({ ...prevState, dept_y: e.target.value }));\r\n    }\r\n    const deptexclude = (e) => {\r\n        setFilter(prevState => ({ ...prevState, dept_n: e.target.value }));\r\n    }\r\n    const coursenum_min = (e) => {\r\n        let val = e.target.value; val = parseFloat(val);\r\n        setFilter(prevState => ({ ...prevState, num_min: val }));\r\n    }\r\n    const coursenum_max = (e) => {\r\n        let val = e.target.value; val = parseFloat(val);\r\n        setFilter(prevState => ({ ...prevState, num_max: val }));\r\n    }\r\n    const credit_min = (e) => {\r\n        let val = e.target.value; val = parseFloat(val);\r\n        setFilter(prevState => ({ ...prevState, cr_min: val }));\r\n    }\r\n    const credit_max = (e) => {\r\n        let val = e.target.value; val = parseFloat(val);\r\n        setFilter(prevState => ({ ...prevState, cr_max: val }));\r\n    }\r\n    const gened = (e) => {\r\n        setFilter(prevState => ({ ...prevState, ge: e.target.value }));\r\n    }\r\n\r\n    const addge = ()=>{\r\n        let val = document.getElementById(\"ge\").value;\r\n        if(!GElist.includes(val)||geneds.includes(val)){\r\n            return;\r\n        }\r\n        setGeneds([...geneds, val]);\r\n        document.getElementById(\"ge\").value=\"\";\r\n    }\r\n\r\n    const delge =(e)=>{\r\n        setGeneds((geneds) => geneds.filter((d) => d !== e));\r\n    }\r\n\r\n    const Chip = (name) => {\r\n        return (\r\n            <button className=\"btn btn-secondary btn-sm\" key={name} value={name} onClick={()=>delge(name)}>\r\n                {name}&nbsp;<i class=\"fas fa-times\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const strtolist = (str) => {\r\n        if (str.trim() == \"\") { return [] };\r\n        str = str.split(\",\");\r\n        let res = [];\r\n        str.forEach(element => {\r\n            res.push(element.trim().toUpperCase());\r\n        });\r\n        return res;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <button className=\"btn btn-dark\" style={{ display: 'block', width: '100%' }} onClick={applyfilter}>Apply Filters</button><br />\r\n            <select defaultValue=\"0\" className=\"custom-select custom-select-sm\" onChange={sort}>\r\n                <option value=\"0\">Sort By: Alphabetical (Default)</option>\r\n                <option value=\"1\">Number of GE covered</option>\r\n                {/* <option value=\"2\">Credit hours (low to high)</option>\r\n                <option value=\"3\">Credit hours (high to low)</option> */}\r\n            </select>\r\n            <hr />\r\n            <div>\r\n                <h5>Search by</h5>\r\n                <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\" id=\"s1\" name=\"customRadio\" className=\"custom-control-input\" value=\"0\" defaultChecked onChange={search} />\r\n                    <label className=\"custom-control-label\" for=\"s1\">Course name only</label>\r\n                </div>\r\n                <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\" id=\"s2\" name=\"customRadio\" className=\"custom-control-input\" value=\"1\" onChange={search} />\r\n                    <label className=\"custom-control-label\" for=\"s2\">Name and description</label>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n                <h5>Department</h5>\r\n                    Only include:\r\n                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"dept_include\" onChange={deptinclude}\r\n                    placeholder=\"Example: COMP, MATH, PHYS\" />\r\n                <small>Search might take a long time if this is field is empty. Will go through all courses.</small><br />\r\n                    Do not include:\r\n                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"dept_exclude\" onChange={deptexclude}\r\n                    placeholder=\"Example: ENGL, HIST\" />\r\n                {/* <small>Comma separated list. Incorrect name will be ignored. Upper/lower case does not matter.</small> */}\r\n                <small>Type a comma separated list.</small>\r\n            </div>\r\n            <hr />\r\n\r\n            {/* <div>\r\n                <h5>Gen Ed</h5>\r\n                <input type=\"text\" className=\"form-control form-control-sm\" id=\"gened\" onChange={gened}\r\n                    placeholder=\"Example: HS, NA, US\" />\r\n                <small>Type a comma separated list. If empty, defaulted to all Gen Eds.</small>\r\n\r\n            </div> */}\r\n            <div>\r\n                <h5>Gen Ed</h5>\r\n                {geneds.map((item) => <span>{Chip(item)}&nbsp;</span>)}\r\n                <div class=\"input-group mb-3\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"GE\" list=\"GEL\" id=\"ge\"/>\r\n                    <datalist id=\"GEL\">\r\n                        {GElist.map((item) => <option key={item} value={item} />)}\r\n                    </datalist>\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary\" type=\"button\" onClick={addge}>ADD</button>\r\n                    </div>\r\n                </div>\r\n                <small>If empty, defaulted to all Gen Eds.</small>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n                <h5>Course Number Range</h5>\r\n                <form className=\"form-inline\">\r\n                    <input type=\"text\" style={{ width: \"75px\" }} className=\"form-control form-control-sm\" id=\"nmin\"\r\n                        placeholder=\"min\" onChange={coursenum_min} />\r\n                        &nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;\r\n                        <input type=\"text\" style={{ width: \"75px\" }} className=\"form-control form-control-sm\" id=\"nmax\"\r\n                        placeholder=\"max\" onChange={coursenum_max} />\r\n                </form>\r\n                {/* <small>hi</small> */}\r\n            </div>\r\n            <hr />\r\n            <div>\r\n                <h5>Credit Hours Range</h5>\r\n                <form className=\"form-inline\">\r\n                    <input type=\"text\" style={{ width: \"75px\" }} className=\"form-control form-control-sm\" id=\"crmin\"\r\n                        placeholder=\"min\" onChange={credit_min} />\r\n                        &nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;\r\n                        <input type=\"text\" style={{ width: \"75px\" }} className=\"form-control form-control-sm\" id=\"crmax\"\r\n                        placeholder=\"max\" onChange={credit_max} />\r\n                </form>\r\n                {/* <small>hi</small> */}\r\n            </div>\r\n            <hr />\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nlet loggedin = localStorage.getItem('log');\r\nlet user = localStorage.getItem('currentuser');\r\n\r\nconst Card = (props) => {\r\n    \r\n    let c = props.course;\r\n\r\n    let cl = JSON.parse(localStorage.getItem('courselist'));\r\n    if (cl == null) { cl = []; }\r\n    let alreadyadded = false;\r\n    cl = cl.forEach(element => {\r\n        if (element.name == c.name) {\r\n            alreadyadded = true;\r\n        }\r\n    });\r\n\r\n    const [added, setAdded] = useState(alreadyadded);\r\n\r\n    const addtolist = () => {\r\n        let cl = JSON.parse(localStorage.getItem('courselist'));\r\n        console.log(cl);\r\n        if (cl == null) { cl = []; }\r\n        let index = cl.find(elt => elt.name == c.name);\r\n        //if(index<0){cl.push(c);}\r\n        cl.push(c);\r\n        localStorage.setItem('courselist', JSON.stringify(cl));\r\n        setAdded(true);\r\n        c.added = true;\r\n    }\r\n\r\n    const removefromlist = () => {\r\n        let cl = JSON.parse(localStorage.getItem('courselist'));\r\n        console.log(cl);\r\n        setAdded(false);\r\n        c.added = false;\r\n        if (cl == null) {\r\n            return;\r\n        }\r\n        let cl2 = [];\r\n        cl = cl.forEach(element => {\r\n            if (element.name != c.name) {\r\n                cl2.push(element);\r\n            }\r\n        });\r\n        localStorage.clear();\r\n        localStorage.setItem('courselist', JSON.stringify(cl2));\r\n\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h5 style={{ display: \"inline\" }}>\r\n                    <b>{c.name}</b> {c.title}\r\n                    <span style={{ color: \"grey\" }}> ({c.credits})</span></h5>\r\n                \r\n                {!added ?\r\n                    <button type=\"button\" className=\"btn btn-success btn-sm\" style={{ float: \"right\" }} onClick={addtolist} disabled={!loggedin}>\r\n                        <i className=\"fas fa-plus-circle\"></i><b>&nbsp;Add to list</b>\r\n                    </button> :\r\n                    <button type=\"button\" className=\"btn btn-danger btn-sm\" style={{ float: \"right\" }} onClick={removefromlist} disabled={!loggedin}>\r\n                        <i className=\"fas fa-minus-circle\"></i><b>&nbsp;Remove from list</b>\r\n                    </button>}\r\n                <br /><b>Gen Ed:</b> {c.ge[0] == \"s\" ? \"None\" : c.ge}<br />\r\n                <b>Prereqs:</b> {c.requisites == \"s\" ? \"None\" : c.requisites}<br />\r\n                <span>{c.introduction}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Filter from \"./Filter\";\r\nimport Card from \"./Card\";\r\nconst courses = require(\"./courses.json\");\r\n\r\nconst Result = (props) => {\r\n    const [res, setRes] = useState(courses.slice(0,200));\r\n\r\n    const filtering = (filter) => {\r\n        let results = [];\r\n\r\n        let sortbyge = (filter.sort == 1);\r\n        let dept_y = filter.dept_y;\r\n        let dept_n = filter.dept_n;\r\n        let cr_min = filter.cr_min;\r\n        let cr_max = filter.cr_max;\r\n        let num_min = filter.num_min;\r\n        let num_max = filter.num_max;\r\n        let gened = filter.ge;\r\n        if(gened==\"\"||gened.length==0){\r\n            gened=[\"CR\", \"FL\", \"QR\", \"LF\", \"PX\", \"PL\", \"HS\", \"SS\", \"VP\", \"LA\", \"PH\", \"BN\", \"CI\", \"EE\", \"GI\", \"NA\", \"QI\", \"US\", \"WB\"];\r\n        }\r\n\r\n        for (let i = 0; i < courses.length; i++) {\r\n            let thiscourse = courses[i];\r\n\r\n            let course_dept = thiscourse.name.split(\" \")[0];\r\n            let course_num = thiscourse.name.split(\" \")[1];\r\n            let cr = parseFloat(thiscourse.credits.split(\" \")[0]);\r\n            if(dept_y.length>0){\r\n                if(!dept_y.includes(course_dept)){continue;}\r\n            }            \r\n            if(dept_n.includes(course_dept)){continue;}\r\n\r\n            if(course_num<num_min || course_num>num_max){continue;}\r\n            if(cr<cr_min || cr>cr_max){continue;}\r\n\r\n            results.push(thiscourse);            \r\n        }\r\n\r\n        if(sortbyge){\r\n            results.forEach((elt)=>{\r\n                elt.num_ge = 0;\r\n                if(elt.ge[0]!=\"s\"){\r\n                    // console.log(\"thiscourse'sge:\"+elt.ge);\r\n                    // console.log(\"ge to match: \"+gened);\r\n                    elt.ge.forEach((req)=>{                       \r\n                        if(gened.includes(req.trim().slice(0,2))){elt.num_ge++};\r\n                    })\r\n                }\r\n                //console.log(elt.name + \" ge: \"+elt.num_ge);\r\n            })\r\n            results.sort(function(a,b){\r\n                return b.num_ge - a.num_ge;\r\n            });\r\n        }\r\n\r\n        let results_final = []\r\n        if (results.length > 50) {\r\n            results_final = [...results.slice(0, 50)]\r\n        } else {\r\n            results_final = [...results]\r\n        }\r\n        setRes(results.slice(0, 200));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-3\" style={{ padding: \"15px 30px\" }}>\r\n                <Filter apply={filtering}></Filter>\r\n            </div>\r\n            <div className=\"col-8\" style={{ backgroundColor: \"rgb(250, 250, 250)\" }}>\r\n                {res.map((data) => { return (<div><br></br><Card course={data}></Card></div>); })}\r\n            </div>\r\n            <div className=\"col-1\">\r\n                {/* nothing here*/}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Result;\r\n\r\n// const filtering = (filter) => {\r\n//     let results = [];\r\n//     let dept_y = filter.dept_y;\r\n//     let dept_n = filter.dept_n;\r\n//     let num_min = filter.num_min;\r\n//     let num_max = filter.num_max;\r\n//     console.log(filter.ge);\r\n//     let ge = filter.ge;\r\n\r\n//     for (let i = 0; i < courses.length; i++) {\r\n//         let course_dept = courses[i].name.split(\" \")[0];\r\n//         let course_num = courses[i].name.split(\" \")[1]\r\n//         for (let j = 0; j < dept_y.length; j++) { //Search for dept_y\r\n//             if (course_dept.toLowerCase().includes(dept_y[j].toLowerCase()) && !results.includes(courses[i])) {\r\n//                 if (parseInt(course_num) >= parseInt(num_min) && !results.includes(courses[i])) {       // course number min\r\n//                     if (parseInt(course_num) <= parseInt(num_max) && !results.includes(courses[i])) {   // course number max\r\n\r\n//                         let ge_in = true;\r\n//                         // for (let k = 0; k < ge.length; k++) {       //ge\r\n//                         //     if (!courses[i].ge.includes(ge[k])) {\r\n//                         //         ge_in = false;\r\n//                         //     }\r\n//                         // }\r\n//                         if (ge_in) {\r\n//                             results.push(courses[i]);\r\n//                         }\r\n\r\n//                     }\r\n//                 }\r\n//             }\r\n//         }\r\n\r\n//     }\r\n//     let results_final = []\r\n//     if (results.length > 50) {\r\n//         results_final = [...results.slice(0, 50)]\r\n//     } else {\r\n//         results_final = [...results]\r\n//     }\r\n//     setRes(results);\r\n//     console.log(results_final)\r\n//     return results_final;\r\n// }\r\n","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from \"./Card\";\r\n\r\nconst CourseList = (props) => {\r\n    let user = localStorage.getItem('currentuser');\r\n    let cl = JSON.parse(localStorage.getItem('courselist'));\r\n    return (\r\n        <div className=\"container\">\r\n            <div  style={{ backgroundColor: \"rgb(250, 250, 250)\" }}>\r\n                {(cl==null || cl.length==0)?\r\n                <h5><br/>You haven't saved any courses.</h5>:\r\n                cl.map((data) => { return (<div><br></br><Card course={data}></Card></div>);})}                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseList;","import React, { Component } from \"react\";\r\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\"\r\nimport TextSearch from \"./TextSearch\";\r\nimport SpeechSearch from \"./SpeechSearch\";\r\nimport CourseCloud from \"./CourseCloud\";\r\nimport SignIn from \"./SignIn\"\r\nimport Register from \"./Register\"\r\nimport Result from \"./Result\"\r\nimport CourseList from \"./CourseList\"\r\nlet loggedin = localStorage.getItem('log');\r\nclass Main extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div>\r\n                    {/* <div className='container pt-3' style={{ height: '60px' }}>\r\n                        <h1 className='text-center font-weight-bold display-4'>UNC Course Search</h1>\r\n                    </div>\r\n                    <hr /> */}\r\n                    {/* <ul className=\"header\">\r\n                        <li><NavLink to=\"/\">Home</NavLink></li>\r\n                        <li><NavLink to=\"/textSearch\">Search by Text</NavLink></li>\r\n                        <li><NavLink to='/speechSearch'>Search by Speech</NavLink></li>\r\n                        <li><NavLink to='/courseCloud'>Course Cloud</NavLink></li>\r\n                        <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n                        <li><NavLink to='/register'>Register</NavLink></li>\r\n                    </ul> */}\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                        <NavLink to=\"/\" className=\"navbar-brand\">Home</NavLink>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/textSearch\">Search by Text</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to='/courseCloud'>Course Cloud</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to='/result'>Search by Filter</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav\">\r\n                                \r\n                                {!loggedin?\"\":<li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to='/courselist'>My Course List</NavLink>\r\n                                </li>}\r\n                                {!loggedin?<li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to='/signin'>Sign In</NavLink>\r\n                                </li>:\"\"}\r\n                                {!loggedin?<li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to='/register'>Register</NavLink>\r\n                                </li>:\"\"}\r\n                                \r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n\r\n\r\n                    <div className=\"content\">\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/textSearch\" component={TextSearch} />\r\n                        {/* <Route path=\"/speechSearch\" component={SpeechSearch}></Route> */}\r\n                        <Route path=\"/courseCloud\" component={CourseCloud} />\r\n                        <Route path=\"/signin\" component={SignIn} />\r\n                        <Route path=\"/register\" component={Register} />\r\n                        <Route path=\"/result\" component={Result} />\r\n                        <Route path=\"/courselist\" component={CourseList} />\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='container mb-3'>\r\n            <div className='page-header'>\r\n                <h1>Your Course Recommendations</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './Home';\r\nimport './index.css';\r\n// import Home from './Home';\r\nimport Main from './Main';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Home /> */}\r\n    <Main/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}